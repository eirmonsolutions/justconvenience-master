{
  "name": "US Visa Login",
  "nodes": [
    {
      "parameters": {
        "interval": 60,
        "unit": "minutes"
      },
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1,
      "position": [240, 300]
    },
    {
      "parameters": {
        "url": "https://ais.usvisa-info.com/en-ca/niv/users/sign_in",
        "options": {
          "responseFormat": "text",
          "allowRedirects": false
        },
        "headers": {
          "parameters": [
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Cache-Control",
              "value": "no-store"
            }
          ]
        }
      },
      "name": "Get Login Page",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [460, 300],
      "notes": "Fetches the login page to extract CSRF token and initial cookies. Response is HTML, so responseFormat is set to text."
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "csrfToken",
              "value": "={{ (new DOMParser()).parseFromString($node['Get Login Page'].json['body'], 'text/html').querySelector('meta[name=\"csrf-token\"]').getAttribute('content') }}"
            },
            {
              "name": "cookies",
              "value": "={{ $node['Get Login Page'].json['headers']['set-cookie'] ? $node['Get Login Page'].json['headers']['set-cookie'].split(';').map(c => c.trim()).filter(c => c.startsWith('_yatri_session=')).join(';') : '' }}"
            }
          ]
        },
        "options": {
          "continueOnFail": true
        }
      },
      "name": "Extract CSRF and Cookies",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [680, 300],
      "notes": "Extracts CSRF token and _yatri_session cookie from the login page response."
    },
    {
      "parameters": {
        "condition": {
          "expression": "{{ $node['Extract CSRF and Cookies'].json['csrfToken'] && $node['Extract CSRF and Cookies'].json['cookies'] }}"
        }
      },
      "name": "Check CSRF and Cookies",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [900, 300],
      "notes": "Ensures CSRF token and cookies are extracted before proceeding."
    },
    {
      "parameters": {
        "url": "https://ais.usvisa-info.com/en-ca/niv/users/sign_in",
        "method": "POST",
        "options": {
          "responseFormat": "text",
          "allowRedirects": true
        },
        "headers": {
          "parameters": [
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Content-Type",
              "value": "application/x-www-form-urlencoded; charset=UTF-8"
            },
            {
              "name": "Cookie",
              "value": "={{ $node['Extract CSRF and Cookies'].json['cookies'] }}"
            },
            {
              "name": "X-CSRF-Token",
              "value": "={{ $node['Extract CSRF and Cookies'].json['csrfToken'] }}"
            },
            {
              "name": "Referer",
              "value": "https://ais.usvisa-info.com/en-ca/niv"
            },
            {
              "name": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            }
          ]
        },
        "bodyParameters": {
          "parameters": [
            {
              "name": "utf8",
              "value": "âœ“"
            },
            {
              "name": "user[email]",
              "value": "{{ $credentials.email }}"
            },
            {
              "name": "user[password]",
              "value": "{{ $credentials.password }}"
            },
            {
              "name": "policy_confirmed",
              "value": "1"
            },
            {
              "name": "commit",
              "value": "Sign In"
            }
          ]
        }
      },
      "name": "Submit Login",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [1120, 200],
      "credentials": {
        "usVisaApi": {
          "id": "YOUR_CREDENTIAL_ID",
          "name": "US Visa API"
        }
      },
      "notes": "Submits the login form with credentials. Response is HTML, so responseFormat is set to text."
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "sessionCookie",
              "value": "={{ $node['Submit Login'].json['headers']['set-cookie'] ? $node['Submit Login'].json['headers']['set-cookie'].split(';').map(c => c.trim()).filter(c => c.startsWith('_yatri_session=')).join(';') : '' }}"
            }
          ]
        },
        "options": {
          "continueOnFail": true
        }
      },
      "name": "Extract Session Cookie",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [1340, 200],
      "notes": "Extracts the _yatri_session cookie from the login response."
    },
    {
      "parameters": {
        "url": "https://your-webhook-url.com/login-success",
        "method": "POST",
        "sendBody": true,
        "jsonBody": "={{ { 'sessionCookie': $node['Extract Session Cookie'].json['sessionCookie'], 'message': 'Login successful' } }}"
      },
      "name": "Success Notification",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [1560, 200],
      "executeOnce": true,
      "continueOnFail": true,
      "notes": "Sends a notification with the session cookie on successful login."
    },
    {
      "parameters": {
        "url": "https://your-webhook-url.com/login-failed",
        "method": "POST",
        "sendBody": true,
        "jsonBody": "={{ { 'message': 'Failed to extract CSRF token or cookies' } }}"
      },
      "name": "Extraction Failure Notification",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [1120, 400],
      "executeOnce": true,
      "continueOnFail": true,
      "notes": "Notifies if CSRF token or cookies could not be extracted."
    },
    {
      "parameters": {
        "options": {}
      },
      "name": "Error Trigger",
      "type": "n8n-nodes-base.errorTrigger",
      "typeVersion": 1,
      "position": [460, 500]
    },
    {
      "parameters": {
        "waitTime": 3600,
        "unit": "seconds"
      },
      "name": "Wait",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1,
      "position": [680, 500],
      "executeOnce": true
    },
    {
      "parameters": {
        "url": "https://your-webhook-url.com/login-error",
        "method": "POST",
        "sendBody": true,
        "jsonBody": "{\"error\": \"{{$node['Error Trigger'].json['error']}}\", \"message\": \"Login failed, retrying after cooldown\"}"
      },
      "name": "Error Notification",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [900, 500],
      "executeOnce": true,
      "continueOnFail": true,
      "notes": "Notifies on login errors and triggers a retry after cooldown."
    }
  ],
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Get Login Page",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Login Page": {
      "main": [
        [
          {
            "node": "Extract CSRF and Cookies",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract CSRF and Cookies": {
      "main": [
        [
          {
            "node": "Check CSRF and Cookies",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check CSRF and Cookies": {
      "main": [
        [
          {
            "node": "Submit Login",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extraction Failure Notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Submit Login": {
      "main": [
        [
          {
            "node": "Extract Session Cookie",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Session Cookie": {
      "main": [
        [
          {
            "node": "Success Notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Trigger": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Error Notification",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get Login Page",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "errorWorkflow": null,
    "timezone": "America/New_York",
    "saveExecutionProgress": true,
    "saveManualExecutions": true
  },
  "id": "987654321"
}